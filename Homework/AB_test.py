#!/usr/bin/env python
# coding: utf-8

# # Задание по теме 2.3.2
# 
# В этом задании вам необходимо использовать набор данных ad.csv.
# 
# 1) Датасет содежит 2 столбца: объявление (A/B) и действие (0/1).
# 
# 2) Вам необходимо сформулировать гипотезу, провести ее проверку (пользуясь
# классическим подходом) и ответить на вопрос какое из объявлений лучше.
# 
# Результаты загрузить в робокод в виде короткого отчета (до 1 стр.)

# In[1]:


import pandas as pd


# In[4]:


df = pd.read_csv('ad.csv')


# In[5]:


df


# Посчитаем количество action для А и В:

# In[10]:


pd.crosstab(df['ad_id'],df['action'])


# Так как мы знаем, что оба эксперимента проводились равное количество раз, мы найдем их доли при action = 1 и сформулируем гипотезу.

# In[11]:


p1 = 304 / 1000
p2 = 372 / 1000
print(p1, p2)


# ## Гипотезы, которые мы хотели бы проверить:
# 
# ### H0: p2 = p1 
# 

# Посчитаем отношение общего количества активностей, которые мы хотим проверить, к общему количеству проводимых экспериментов:

# In[14]:


p_hat = (303+372) / 2000
p_hat


# Посчитаем дисперсию:

# In[15]:


var = p_hat * (1 - p_hat) * (2/1000)
var


# Посчитаем стандартное отклонение:

# In[17]:


import numpy as np
st = np.sqrt(var)
st


# Посчитаем t - критерий Стьюдента для двух независимых выборок следующим образом:

# In[19]:


t = (p2 - p1) / st
t


# Посчитаем значение функции распределения - CDF (cumulative distribution function)
# 
# CDF для стандартного (нормированого) нормального закона:

# In[20]:


import scipy.stats as stats 


# In[21]:


stats.norm.cdf(t)


# CDF для распределения Стьюдента:
# 
# Число степеней свободы рассчитывается как сумма наблюдений в обеих выборках, минус две.
# 
# (если обозначить площадь слева от заданной ординаты как stats.t.cdf(t, df = 1998), то площадь справа - p_value)

# In[24]:


p_value = 1 - stats.t.cdf(t, df = 1998)
p_value


# In[26]:


alpha = 0.05
p_value > alpha


# Вывод: При уровне значимости - 5% и данными наблюдениями мы не можем отклонить гипотезу H0 (т.к. разницы между a и b нет с точки зрения статистики и использовать один из вариантов было бы некорректно)

# In[ ]:




